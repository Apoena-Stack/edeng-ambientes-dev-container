# Build the base image
FROM python:3.12-slim-bookworm AS base

WORKDIR /app/

ENV PYTHONPATH "${PYTHONPATH}:/app"

# Build the development image
FROM base AS dev

RUN apt-get update && apt-get install -y \
    git \
    docker.io

RUN pip install --upgrade pip && \
    pip install poetry==1.8.2 && \
    if [ -f poetry.lock ]; then poetry config virtualenvs.create false; fi && \
    if [ -f pyproject.toml ]; then poetry install --only main --no-root; fi

COPY src/ /app/src/

# Build the QA image
FROM base AS qa

COPY pyproject.toml /app/
RUN pip install --upgrade pip && \
    pip install poetry==1.8.2 && \
    if [ -f poetry.lock ]; then poetry config virtualenvs.create false; fi && \
    poetry install --only main --no-root

COPY src/ /app/src/

# Add any additional QA-specific dependencies or configurations here
RUN pip install pytest

ENTRYPOINT ["pytest", "/app/src/tests"]

# Build the pipeline image
FROM base AS prod

COPY pyproject.toml /app/
RUN pip install --upgrade pip && \
    pip install poetry==1.8.2 && \
    if [ -f poetry.lock ]; then poetry config virtualenvs.create false; fi && \
    poetry install --only main --no-root

COPY src/ /app/src/

ENTRYPOINT ["python", "/app/src/main.py"]
